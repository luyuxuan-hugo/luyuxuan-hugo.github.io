<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>背包问题</title>
    <url>/2023/03/29/01%E8%83%8C%E5%8C%85/</url>
    <content><![CDATA[<div style="font-size: 35px; color: #93d5dc;text-align: center">晴朗的春日</div>

<span id="more"></span>

<hr>
<h2 id="01背包"><a href="#01背包" class="headerlink" title="01背包"></a>01背包</h2><blockquote>
<p>模型如下: </p>
<p>给定 <em><strong>n</strong></em>个物品，其中第<em><strong>i</strong></em>个物品的体积为<code>v[i]</code>，价值为<code>w[i]</code>。有一容积为 <em><strong>m</strong></em>的背包，要求选择一些物品放入背包，使得物品总体积不超过<em><strong>m</strong></em>的前提下，物品的价值总和最大。</p>
<p>tips: 每个物品只有一件，状态只有取或者不取。  </p>
</blockquote>
<p>用已经处理的物品数作为DP的阶段，背包中已经放入的总体积作为附加维度。    </p>
<p><code>F[i,j]</code>表示从前<em><strong>i</strong></em>个物品中选取了体积为<em><strong>j</strong></em>的物品后的最大价值和，可以分为两个部分：</p>
<ul>
<li><p>未选取第<em><strong>i</strong></em>个物品</p>
<ul>
<li>那么当前的状态与<code>F[i-1,j]</code>价值和与总体积都相等,可以直接copy这一状态:<code>F[i][j] = F[i-1][j]</code></li>
</ul>
</li>
<li><p>选取了第<em><strong>i</strong></em>个物品  </p>
<ul>
<li>要放入第<em><strong>i</strong></em>个物品,需要在<em><strong>j</strong></em>中预留出第<em><strong>i</strong></em>件物品所需的体积<code>v[i]</code>,那么上一步状态为<code>F[i-1,j-v[i]</code>,因为放入了第<em><strong>i</strong></em>件物品,那么总价值更新为<code>F[i][j] = F[i-1,j-v[i] + w[i]</code></li>
</ul>
</li>
</ul>
<p><em><strong>代码如下:</strong></em></p>
  <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> v[N], w[N];</span><br><span class="line"><span class="type">int</span> f[N][N];</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    cin &gt;&gt; v[i] &gt;&gt; w[i];</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="comment">//阶段</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++) <span class="comment">//体积</span></span><br><span class="line">        &#123;</span><br><span class="line">            f[i][j] = f[i - <span class="number">1</span>][j];</span><br><span class="line">            <span class="keyword">if</span> (j &gt;= v[i]) <span class="comment">//如果当前的体积足够放下v[i] 再考虑选取第i个物品</span></span><br><span class="line">                f[i][j] = <span class="built_in">max</span>(f[i][j], f[i - <span class="number">1</span>][j - v[i]] + w[i]); </span><br><span class="line">           				 <span class="comment">/*如果放入i后比之前更大,更新价值和*/</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">	cout &lt;&lt; f[n][m] &lt;&lt; endl;<span class="comment">//输出</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="滚动数组优化"><a href="#滚动数组优化" class="headerlink" title="滚动数组优化"></a>滚动数组优化</h3><p>在更新<code>F[i][j]</code>时,只用到了<code>F[i-1][j]</code>或<code>F[i-1][j-v[i]]</code>,因此只需要两行即可,上一行被用来更新当前行之后就可以被覆写掉,因此只需要开<code>F[2][M]</code>,空间复杂度由O(NM)降至O(M)。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> v[N], w[N];</span><br><span class="line"><span class="type">int</span> f[<span class="number">2</span>][N];</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    cin &gt;&gt; v[i] &gt;&gt; w[i];</span><br><span class="line">  	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="comment">//阶段</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++) <span class="comment">//体积</span></span><br><span class="line">          &#123;</span><br><span class="line">              f[i&amp;<span class="number">1</span>][j] = f[(i - <span class="number">1</span>)&amp;<span class="number">1</span>][j];</span><br><span class="line">              <span class="keyword">if</span> (j &gt;= v[i]) <span class="comment">//如果当前的体积足够放下v[i] 再考虑选取第i个物品</span></span><br><span class="line">                f[i&amp;<span class="number">1</span>][j] = <span class="built_in">max</span>(f[i&amp;<span class="number">1</span>][j], f[(i - <span class="number">1</span>)&amp;<span class="number">1</span>][j - v[i]] + w[i]); </span><br><span class="line">             				 <span class="comment">/*如果放入i后比之前更大,更新价值和*/</span></span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  	cout &lt;&lt; f[n&amp;<span class="number">1</span>][m] &lt;&lt; endl;<span class="comment">//输出</span></span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="一维优化"><a href="#一维优化" class="headerlink" title="一维优化"></a>一维优化</h3><ol>
<li><p>为什么数组的第一维可以省略?</p>
<p>  因为外层循环中,隐含了<em><strong>i</strong></em>这一变量,在内层循环中,遍历过的<em><strong>j</strong></em>属于<em><strong>i</strong></em>阶段,未遍历过的属于<em><strong>i-1</strong></em>阶段</p>
</li>
<li><p>为什么内层循环中,<em><strong>j</strong></em>要从大到小循环?  </p>
<p>  因为在内层循环中,以<em><strong>j</strong></em>为分界,<code>j-v[i]</code>一定小于<em><strong>j</strong></em>,我们更新时需要<em><strong>i-1</strong></em>阶段的<code>F[j-v[i]]</code>,而如果<em><strong>j</strong></em>从小到大遍历<code>[v[i],m]</code>那么<code>F[j-v[i]]</code>一定会在<em><strong>j</strong></em>之前更新,更新之后就对应<em><strong>i</strong></em>阶段了,因此需要从大到小循环,<code>[v[i],j]</code>是<em><strong>i-1</strong></em>阶段,<code>[j,m]</code>是<em><strong>i</strong></em>阶段</p>
</li>
</ol>
<p><em><strong>代码如下:</strong></em>  </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> f[N];</span><br><span class="line"><span class="type">int</span> v[N], w[N];</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; v[i] &gt;&gt; w[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = m; j &gt;= v[i]; j--)</span><br><span class="line">            f[j] = <span class="built_in">max</span>(f[j], f[j - v[i]] + w[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; f[m] &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>给L小姐的生日便签</title>
    <url>/2023/03/18/birthday/</url>
    <content><![CDATA[<div style="font-size: 35px; color: #e7659b;text-align: center">memory</div>  

<span id="more"></span>  

<blockquote>
<p>亲爱的煜儿:   </p>
<blockquote>
<p> 初春的晚风轻盈却带着凉意，零星的小雨拍打着宇宙的回声，窗外的弦月更加明朗。如果月亮是每个夜晚的标题,那我每一天的月亮都清晰地写满了你的名字,黑夜在我的身后流动,我的心亮如白昼,你是落入我梦中的月亮,你是我心的荒原上绽放的玫瑰  </p>
<p>后来,我说了很多话,写了很多诗,但都形容不出见你时的惊艳，你总觉得我形容得不够真实,我却总嫌自己文辞浅薄,我喜欢写夜晚、月亮和梦，因为当这三个词交织，你的名字便会浮现。眼前影影绰绰，雾气来自多年以前，被你扣留的日子依然脉搏清晰，佳煜小姐。      </p>
<p>我并不对某个季节情有独钟，我会在冬日出轨与将你共度的春天，我会在春日幻想我们在夏末夕阳下的拥抱，你是我一切浪漫的线索，你是我所有的时间和季节里的渴望。我对你情有独钟，佳煜小姐。  </p>
<p>我明白爱是玫瑰与荆棘同株，我始终爱你，希望你一切的愿望都能实现，所有对你的祝福都能灵验，祝我们有更多清晰的瞬间和确切的爱，祝我们一直是我们。  </p>
<p>生日快乐，佳煜小姐。<br>我爱你</p>
</blockquote>
</blockquote>
<p><code>2022.03.18</code> </p>
]]></content>
      <tags>
        <tag>with_yu</tag>
      </tags>
  </entry>
  <entry>
    <title>DP</title>
    <url>/2022/06/26/DP/</url>
    <content><![CDATA[<div style="font-size: 35px; color: #b8a6d9;text-align: center">天真得只有你</br>
令神仙鱼归天要怪谁</div>  

<span id="more"></span>

<hr>
<p>动态规划,从集合角度考虑<br>f[i][j]表示状态<br>状态计算依赖集合的划分  </p>
<h3 id="摘花生"><a href="#摘花生" class="headerlink" title="摘花生"></a>摘花生</h3><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>Hello Kitty 想摘点花生送给她喜欢的米老鼠。  </p>
<p>她来到一片有网格状道路的矩形花生地，从西北角进去，东南角出来。  </p>
<p>地里每个道路的交叉点上都有种着一株花生苗，上面有若干颗花生，经过一株花生苗就能摘走该它上面所有的花生。  </p>
<p>Hello Kitty 只能向东或向南走，不能向西或向北走。  </p>
<p>问 Hello Kitty 最多能够摘到多少颗花生。  </p>
<hr>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>$$<br>1 ≤ T ≤ 100,<br>1≤R,C≤100,<br>0≤M≤1000<br>$$</p>
<hr>
<h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行是一个整数 T，代表一共有多少组数据。</p>
<p>接下来是 T 组数据。</p>
<p>每组数据的第一行是两个整数，分别代表花生苗的行数 R 和列数 C。</p>
<p>每组数据的接下来 R 行数据，从北向南依次描述每行花生苗的情况。每行数据有 C 个整数，按从西向东的顺序描述了该行每株花生苗上的花生数目 M。</p>
<hr>
<h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>对每组输入数据，输出一行，内容为 Hello Kitty 能摘到得最多的花生颗数。</p>
<h4 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h4><h5 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h5><pre><code>2
2 2
1 1
3 4
2 3
2 3 4
1 6 5  
</code></pre>
<h5 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h5><pre><code>8
16
</code></pre>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">110</span>;<span class="comment">//数据范围</span></span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> w[N][N];<span class="comment">//交叉地上的花生数量</span></span><br><span class="line"><span class="type">int</span> f[N][N];<span class="comment">//当前状态,即从f[1][1]到f[i][j]所有道路中数量最多的  </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> T;<span class="comment">//数据组数 </span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">                f[i][j]=<span class="built_in">max</span>(f[i][j<span class="number">-1</span>],f[i<span class="number">-1</span>][j])+w[i][j];</span><br><span class="line">                <span class="comment">//集合的划分依据就是从上往下还是从左往右</span></span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,f[n][m]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>scanf和printf比cin和cout更快  </p>
</blockquote>
<hr>
<h3 id="最低通行费"><a href="#最低通行费" class="headerlink" title="最低通行费"></a>最低通行费</h3><h4 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h4><p>一个商人穿过一个 N×N 的正方形的网格，去参加一个非常重要的商务活动。</p>
<p>他要从网格的左上角进，右下角出。</p>
<p>每穿越中间 1 个小方格，都要花费 1 个单位时间。</p>
<p>商人必须在 (2N−1) 个单位时间穿越出去。</p>
<p>而在经过中间的每个小方格时，都需要缴纳一定的费用。</p>
<p>这个商人期望在规定时间内用最少费用穿越出去。</p>
<p>请问至少需要多少费用？</p>
<p>注意：不能对角穿越各个小方格（即，只能向上下左右四个方向移动且不能离开网格）。</p>
<hr>
<h4 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行是一个整数，表示正方形的宽度 N。</p>
<p>后面 N 行，每行 N 个不大于 100 的正整数，为网格上每个小方格的费用。</p>
<hr>
<h4 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个整数，表示至少需要的费用。</p>
<h4 id="数据范围-1"><a href="#数据范围-1" class="headerlink" title="数据范围"></a>数据范围</h4><p>$$<br>1≤N≤100<br>$$</p>
<hr>
<h4 id="输入样例：-1"><a href="#输入样例：-1" class="headerlink" title="输入样例："></a>输入样例：</h4><p>5<br>1  4  6  8  10<br>2  5  7  15 17<br>6  8  9  18 20<br>10 11 12 19 21<br>20 23 25 29 33  </p>
<h4 id="输出样例：-1"><a href="#输出样例：-1" class="headerlink" title="输出样例："></a>输出样例：</h4><p>109  </p>
<h4 id="样例解释"><a href="#样例解释" class="headerlink" title="样例解释"></a>样例解释</h4><p>样例中，最小值为 109&#x3D;1+2+5+7+9+12+19+21+33。  </p>
<h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">110</span>,INF=<span class="number">1e9</span>;</span><br><span class="line"><span class="type">int</span> n;<span class="comment">//矩阵行数/列数  </span></span><br><span class="line"><span class="type">int</span> w[N][N];<span class="comment">//需要的费用</span></span><br><span class="line"><span class="type">int</span> f[N][N];<span class="comment">//状态,所有到当前位置的路径中费用的最小值  </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i==<span class="number">1</span>&amp;&amp;j==<span class="number">1</span>)</span><br><span class="line">            f[i][j]=w[i][j];<span class="comment">//限制左上角 </span></span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                f[i][j]=INF;</span><br><span class="line">                <span class="keyword">if</span>(i&gt;<span class="number">1</span>)</span><br><span class="line">                f[i][j]=<span class="built_in">min</span>(f[i][j],f[i<span class="number">-1</span>][j]+w[i][j]);<span class="comment">//只有行数大于1时才能从上往下走</span></span><br><span class="line">                f[i][j]=<span class="built_in">min</span>(f[i][j],f[i][j<span class="number">-1</span>]+w[i][j]);<span class="comment">//比较从上往下和从左往右的状态哪个更小</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, f[n][m]);</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>html记忆重构(二)</title>
    <url>/2022/05/28/html%E8%AE%B0%E5%BF%86%E9%87%8D%E6%9E%84%20(%20%E4%BA%8C%20)/</url>
    <content><![CDATA[<div style="font-size: 35px; color: #9ac8e2;text-align: center">说起莎乐美,月亮就会出现</div>

<span id="more"></span>

<hr>
<p>开始CSS</p>
<h3 id="style标签"><a href="#style标签" class="headerlink" title="style标签"></a>style标签</h3><p>直接在<code>&lt;/head&gt;</code>和<code>&lt;/title&gt;</code>之间添加style标签即可在其中设置样式</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">          </span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<hr>
<h4 id="标签选择器"><a href="#标签选择器" class="headerlink" title="标签选择器"></a>标签选择器</h4><p>可以在style中输入要选择的标签,单独为其设置样式<br>例如:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"> <span class="selector-tag">div</span> &#123;        </span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>:<span class="number">#576690</span> ;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-size</span>: <span class="number">24px</span>;</span></span><br><span class="line"><span class="language-css">     &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>这样就将页面中所有的div标签中的内容颜色和字体大小设置好了.</p>
<hr>
<h4 id="类选择器"><a href="#类选择器" class="headerlink" title="类选择器"></a>类选择器</h4><p>可以在style中输入要选择的类,单独为其设置样式<br>例如:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.header</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">font-size</span>: <span class="number">45px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>然后只需要在想要添加这种属性的标签内加入class&#x3D;”classname”即可<br>例如:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span>测试<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<hr>
<h5 id="div的块属性应用——画盒子"><a href="#div的块属性应用——画盒子" class="headerlink" title="div的块属性应用——画盒子"></a>div的块属性应用——画盒子</h5><p>在style属性中给div设置一个高height和width再加上背景颜色就可以画出一个盒子了,利用类选择器给不同的div标签设置不同的类,就可以画出多个盒子<br>例如:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width:20px;height:20px;background-color:red&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<div style="width:20px;height:20px;background-color:red;display:inline-block"></div>
<div style="width:20px;height:20px;background-color:blue;display:inline-block"></div>

<blockquote>
<p>也可以这样在标签内单独设置样式,只适用于要设置样式较少的情况<br>由于div是block属性,独占一行,这里设置display:inline-block 将属性转换为行内块,就可以在一行同时显示多个div</p>
</blockquote>
<hr>
<h5 id="多类名应用"><a href="#多类名应用" class="headerlink" title="多类名应用"></a>多类名应用</h5><p>可以给同一个标签添加多个类,只需要在两个类之间加上一个空格即可<br>例如:<br>        .a{</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#125;</span><br><span class="line">.b&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">.c&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;a b c&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<hr>
<h4 id="id选择器"><a href="#id选择器" class="headerlink" title="id选择器"></a>id选择器</h4><p>id选择器的使用与类选择器相似,只需要在style标签内添加#idname {},在需要使用的标签内添加id&#x3D;”idname”即可,在css中使用不多</p>
<blockquote>
<p>与类选择器的区别</p>
<ol>
<li>id选择器只能使用一次, 类选择器可以无限使用</li>
<li>一个标签可以使用多个类选择器,但是只能使用一个id选择器<blockquote>
<p>综上,一般不在css中使用id选择器,留在js中使用</p>
</blockquote>
</li>
</ol>
</blockquote>
<hr>
<h4 id="通配符选择器"><a href="#通配符选择器" class="headerlink" title="通配符选择器"></a>通配符选择器</h4><p>修改所有标签的属性<br>格式:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">* &#123; &#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>一般用于修改页面的边距</p>
</blockquote>
<hr>
<h4 id="字体属性"><a href="#字体属性" class="headerlink" title="字体属性"></a>字体属性</h4><hr>
<h5 id="一般格式"><a href="#一般格式" class="headerlink" title="一般格式"></a>一般格式</h5><p>常用的字体属性如下:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">font-size</span>:<span class="number">16px</span>; 字体大小</span><br><span class="line"><span class="attribute">font-family</span>:<span class="string">&#x27;宋体&#x27;</span>; 字体</span><br></pre></td></tr></table></figure>
<blockquote>
<p>默认为微软雅黑</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">color</span>:<span class="number">#ffffff</span>;,字体颜色</span><br></pre></td></tr></table></figure>
<blockquote>
<p>还可以用rgb(255,255,255)这种格式</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">font-style</span>:normal/italic; 字体样式,默认<span class="attribute">normal</span></span><br><span class="line"><span class="attribute">font-weight</span>: number;字体粗细,数字越大越粗</span><br></pre></td></tr></table></figure>

<hr>
<h5 id="合并"><a href="#合并" class="headerlink" title="合并"></a>合并</h5><p> 可以用如下格式合并:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">font</span>: normal <span class="number">700</span> <span class="number">25px</span>/<span class="number">25px</span> <span class="string">&#x27;宋体&#x27;</span></span><br><span class="line"><span class="comment">/* font: font-style font-weigth font-size/line-height font-family*/</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>font-size和line-height相等的话,字体就是行内居中<br>font-size和font-family为必须属性,style和weight可以交换位置</p>
</blockquote>
<hr>
<h4 id="text-decoration"><a href="#text-decoration" class="headerlink" title="text-decoration"></a>text-decoration</h4><p>一般用于修改链接的下划线<br>一般情况下,默认给<code>&lt;a&gt;</code>添加属性:decoration:underline,如果不想要这个下划线,只需要添加  </p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>:none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>即可</p>
<blockquote>
<p>text-decoration:line-through 是删除线</p>
</blockquote>
<hr>
<h4 id="text-indent字符缩进"><a href="#text-indent字符缩进" class="headerlink" title="text-indent字符缩进"></a>text-indent字符缩进</h4><p>一般用于段落的首行缩进,一般中文是缩进两个字,如下</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">text-indent</span>:<span class="number">2em</span>; <span class="comment">/*em表示字,也可以用px*/</span></span><br></pre></td></tr></table></figure>

<hr>
<h4 id="行间距"><a href="#行间距" class="headerlink" title="行间距"></a>行间距</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">/*行间距= 上边距</span><br><span class="line">          +字高</span><br><span class="line">          +下边距</span><br><span class="line">*/</span><br></pre></td></tr></table></figure>
<p>只需要设置line-height和font-size就可以确定行间距(不同标签之间不适用)<br>例如:line-height:2.5 表示行高为字体大小的2.5倍,此时行间距就等于字体大小的0.75倍</p>
<hr>
<h3 id="外部样式表"><a href="#外部样式表" class="headerlink" title="外部样式表"></a>外部样式表</h3><p>将style中的内容写在一个新的文件中,该文件的后缀名为.css,只需要在title下面加上这样一行:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;style.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>即可将该样式表应用到本页面</p>
<h4 id="emmet语法"><a href="#emmet语法" class="headerlink" title="emmet语法"></a>emmet语法</h4><h5 id="缩写"><a href="#缩写" class="headerlink" title="缩写"></a>缩写</h5><p>打游戏去咯,happy,开摆  </p>
]]></content>
      <tags>
        <tag>Html5</tag>
      </tags>
  </entry>
  <entry>
    <title>db-01</title>
    <url>/2022/10/13/db-01/</url>
    <content><![CDATA[<div style="font-size: 35px; color: #f1a08d;text-align: center">"我们彼此停泊"</div> 

<span id="more"></span>

<hr>
<h1 id="mysql-操作"><a href="#mysql-操作" class="headerlink" title="mysql 操作"></a>mysql 操作</h1><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net start mysql80  </span><br></pre></td></tr></table></figure>

<h3 id="关闭"><a href="#关闭" class="headerlink" title="关闭"></a>关闭</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net start mysql80  </span><br></pre></td></tr></table></figure>

<h3 id="cmd连接mysql"><a href="#cmd连接mysql" class="headerlink" title="cmd连接mysql"></a>cmd连接mysql</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -u root -p  </span><br></pre></td></tr></table></figure>

<blockquote>
<p>cmd要管理员打开  </p>
</blockquote>
<h1 id="DDL语句"><a href="#DDL语句" class="headerlink" title="DDL语句"></a>DDL语句</h1><p><em><strong>Data Definition Language,数据定义语言,用来定义数据库对象(数据库,表,字段).</strong></em>  </p>
<h2 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h2><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create database [if not exists] databasename [default charset] [collate 排序规则];</span><br><span class="line">eg:</span><br><span class="line">create database if not exists Student;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>中括号中是可选操作   </p>
<blockquote>
<p>if not exists 如果数据库不存在 则创建   </p>
<blockquote>
<p>不能创建两个名字相同的数据库   </p>
</blockquote>
</blockquote>
</blockquote>
<h3 id="查询所有数据库"><a href="#查询所有数据库" class="headerlink" title="查询所有数据库"></a>查询所有数据库</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show databases; </span><br></pre></td></tr></table></figure>

<blockquote>
<p>显示所有的数据库  </p>
</blockquote>
<h3 id="切换数据库"><a href="#切换数据库" class="headerlink" title="切换数据库"></a>切换数据库</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use databasename;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>切换使用该数据库,对该数据库进行操作</p>
</blockquote>
<h3 id="查询当前所在数据库"><a href="#查询当前所在数据库" class="headerlink" title="查询当前所在数据库"></a>查询当前所在数据库</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select database();</span><br></pre></td></tr></table></figure>

<blockquote>
<p>显示当前正在操作的数据库</p>
</blockquote>
<h3 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">drop database [if exists] databasename;</span><br><span class="line">eg:</span><br><span class="line">drop database if exists Student;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>删除数据库,加上if exists 只有在该数据库存在时才删除.</p>
</blockquote>
<hr>
<h2 id="表操作"><a href="#表操作" class="headerlink" title="表操作"></a>表操作</h2><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><h4 id="数值类型"><a href="#数值类型" class="headerlink" title="数值类型"></a>数值类型</h4><p><em><strong>tinyint:</strong></em> 取值范围(-128,127),unsigned取值范围(0,255)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">unsigned使用方法:</span><br><span class="line">age tinyint unsigned;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>smallint 2bytes<br>mediumint 3bytes<br>int 4bytes<br>bigint 8bytes<br>float 4bytes 单精度浮点数<br>double 8bytes 双精度浮点数</p>
</blockquote>
<hr>
<h4 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h4><p><em><strong>char:</strong></em> 定长字符串, <em><strong>varchar</strong></em> 变长字符串</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">name varchar(50),</span><br><span class="line"></span><br><span class="line">idno char(18) comment &#x27;身份证号&#x27;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>char性能优于varchar</p>
</blockquote>
<h4 id="日期时间类型"><a href="#日期时间类型" class="headerlink" title="日期时间类型"></a>日期时间类型</h4><p><em><strong>data</strong></em> 日期 <code>yyyy-mm-dd </code><br><em><strong>time</strong></em> 时间 <code>hh:mm:ss</code><br><em><strong>year</strong></em> 年份 <code>yyyy</code><br><em><strong>datetime</strong></em> 混合日期和时间 <code>yyyy-mm-dd hh:mm:ss</code>  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">entrydate date comment &#x27;入学时间&#x27;,  </span><br><span class="line"></span><br><span class="line">submittime datetime comment &#x27;提交时间&#x27;</span><br></pre></td></tr></table></figure>

<h3 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table tablename(</span><br><span class="line"></span><br><span class="line">    字段1 字段类型 [comment 字段1注释],</span><br><span class="line"></span><br><span class="line">    字段2 字段类型 [comment 字段2注释]</span><br><span class="line"></span><br><span class="line">) [comment 表注释] </span><br><span class="line"></span><br><span class="line">eg:</span><br><span class="line">create table Student(</span><br><span class="line"></span><br><span class="line">    id int comment &#x27;编号&#x27;,</span><br><span class="line"></span><br><span class="line">    name varchar(50) comment &#x27;姓名&#x27;</span><br><span class="line"></span><br><span class="line">) comment &#x27;学生表&#x27;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>字段之间需要用逗号连接,comment是可选属性 </p>
</blockquote>
<h3 id="查询当前数据库的所有表"><a href="#查询当前数据库的所有表" class="headerlink" title="查询当前数据库的所有表"></a>查询当前数据库的所有表</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show tables;</span><br></pre></td></tr></table></figure>

<h3 id="查询指定表"><a href="#查询指定表" class="headerlink" title="查询指定表"></a>查询指定表</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">desc tablename;</span><br></pre></td></tr></table></figure>

<h3 id="查询指定表的建表语句"><a href="#查询指定表的建表语句" class="headerlink" title="查询指定表的建表语句"></a>查询指定表的建表语句</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show create table tablename;</span><br></pre></td></tr></table></figure>

<h3 id="修改表"><a href="#修改表" class="headerlink" title="修改表"></a>修改表</h3><h4 id="添加字段"><a href="#添加字段" class="headerlink" title="添加字段"></a>添加字段</h4><p><em><strong>ADD</strong></em> </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table tablename add 字段名 类型 [comment 注释]</span><br><span class="line"></span><br><span class="line">eg:</span><br><span class="line"></span><br><span class="line">alter table Student add dept varchar(20) comment &#x27;专业&#x27;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>database</tag>
      </tags>
  </entry>
  <entry>
    <title>html记忆重构5</title>
    <url>/2022/07/11/html%E8%AE%B0%E5%BF%86%E9%87%8D%E6%9E%84(%E4%BA%94)/</url>
    <content><![CDATA[<div style="font-size: 35px; color: #b8a6d9;text-align: center"></div>

<hr>
<span id="more"></span>  

<hr>
<h3 id="三大特性"><a href="#三大特性" class="headerlink" title="三大特性"></a>三大特性</h3><hr>
<h5 id="层叠性"><a href="#层叠性" class="headerlink" title="层叠性"></a>层叠性</h5><p>设置相同的样式,一个样式就会覆盖另一个冲突的样式,遵守就近原则,不冲突的不覆盖  </p>
<h5 id="继承性"><a href="#继承性" class="headerlink" title="继承性"></a>继承性</h5><p>子标签会继承父标签的的某些样式,如 text-, font-, line-, 以及color属性   </p>
<h5 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h5><p>当同一个元素指定多个选择器,根据选择器的权重来执行   </p>
<p>继承或 * : <code>0,0,0,0</code> ;<br>元素选择器 : <code>0,0,0,1</code> ;<br>类选择器&#x2F;伪类选择器 : <code>0,0,1,0</code> ;<br>ID选择器 : <code>0,1,0,0</code> ;<br>行内样式style&#x3D;”” : <code>1,0,0,0</code> ;<br>!important : 无限大 ;</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span>&#123;</span><br><span class="line">     <span class="attribute">color</span>:blue<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>复合选择器有权重叠加的问题 </p>
</blockquote>
<hr>
<h3 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h3><h4 id="边框"><a href="#边框" class="headerlink" title="边框"></a>边框</h4><h5 id="border-width"><a href="#border-width" class="headerlink" title="border-width"></a>border-width</h5><p>边框的粗细 </p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">border-width</span>: <span class="number">20px</span>;</span><br></pre></td></tr></table></figure>

<h5 id="border-style"><a href="#border-style" class="headerlink" title="border-style"></a>border-style</h5><p>边框样式,默认为none;</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">border-style</span>: dotted/solid/dashed  点线/实线/虚线  </span><br></pre></td></tr></table></figure>

<h5 id="border-color"><a href="#border-color" class="headerlink" title="border-color"></a>border-color</h5><p>边框颜色</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">border-color</span>: <span class="number">#fff</span>  </span><br></pre></td></tr></table></figure>

<h5 id="复合写法"><a href="#复合写法" class="headerlink" title="复合写法"></a>复合写法</h5><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">border</span>: <span class="number">20px</span> solid <span class="number">#fff</span>  </span><br></pre></td></tr></table></figure>

<blockquote>
<p>没有先后顺序  </p>
</blockquote>
<p><em><strong>可以只设定边框的一条边</strong></em>  </p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">border-top</span>: <span class="number">20px</span> solid <span class="number">#fff</span></span><br></pre></td></tr></table></figure>

<h5 id="border-collapse"><a href="#border-collapse" class="headerlink" title="border-collapse"></a>border-collapse</h5><p>边框合并</p>
<hr>
<blockquote>
<p>边框会影响原本盒子的大小 </p>
</blockquote>
<h4 id="内边距padding"><a href="#内边距padding" class="headerlink" title="内边距padding"></a>内边距padding</h4><p>内边距,即内容与边框之间的距离</p>
<p>可以单独写每个方向的内边距 </p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">padding-top</span>: </span><br><span class="line">padding-left:  </span><br><span class="line">padding-right: </span><br><span class="line">padding-bottom: </span><br></pre></td></tr></table></figure>

<p>也可以复合写,可以有四种写法 </p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">padding</span>: <span class="number">5px</span>; 上下左右边距都是<span class="number">5px</span>  </span><br><span class="line"><span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span>; 上下边距是<span class="number">5px</span>,左右边距是<span class="number">10px</span></span><br><span class="line"><span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span> <span class="number">20px</span>; 上边距是<span class="number">5px</span>,下边距是<span class="number">20px</span>,左右边距是<span class="number">10px</span> </span><br><span class="line"><span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span> <span class="number">20px</span> <span class="number">40px</span>;上右下左分别为<span class="number">5</span>/<span class="number">10</span>/<span class="number">20</span>/<span class="number">40px</span>  </span><br></pre></td></tr></table></figure>

<blockquote>
<p>padding也会影响盒子的大小<br>如果本身没有指定width和height值,padding不会撑开盒子</p>
</blockquote>
<h4 id="外边距margin"><a href="#外边距margin" class="headerlink" title="外边距margin"></a>外边距margin</h4>]]></content>
      <tags>
        <tag>Html5</tag>
      </tags>
  </entry>
  <entry>
    <title>html记忆重构(三)</title>
    <url>/2022/05/30/html%E8%AE%B0%E5%BF%86%E9%87%8D%E6%9E%84(%E4%B8%89)/</url>
    <content><![CDATA[<div style="font-size: 35px; color: #9ac8e2;text-align: center">我们不再一起漫游,踏着灿烂的月光</div>

<span id="more"></span>

<hr>
<h3 id="emmet语法"><a href="#emmet语法" class="headerlink" title="emmet语法"></a>emmet语法</h3><h4 id="缩写"><a href="#缩写" class="headerlink" title="缩写"></a>缩写</h4><p>在vsc中,配合插件使用.<br>只需要写出缩写就会提示选择,例如:<br><code>font-size</code>: fsz<br><code>width</code>: w<br><code>text-indent</code>: ti<br><code>text-align:center</code>: tac<br><code>height</code>: h<br><code>line-height</code>: lh</p>
<hr>
<h4 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h4><h5 id="生成"><a href="#生成" class="headerlink" title="生成"></a>生成</h5><p>只需要输入标签名后按下回车或者tab即可 例如输入div后按下回车即可生成</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<hr>
<h5 id="生成多个"><a href="#生成多个" class="headerlink" title="生成多个"></a>生成多个</h5><p>只需要在标签名后加上*x x为数字 即可生成x个该标签.例如:输入<code>div*5</code>后按下tab即可生成</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<hr>
<h5 id="父子标签"><a href="#父子标签" class="headerlink" title="父子标签"></a>父子标签</h5><p>生成包含关系的标签,用&gt;符号即可.例如输入<br><code>ul&gt;li*5</code>即可生成</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>

<hr>
<h5 id="兄弟标签"><a href="#兄弟标签" class="headerlink" title="兄弟标签"></a>兄弟标签</h5><p>生成并列关系的标签,用+即可.例如输入div+p即可生成</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<hr>
<h5 id="调用class"><a href="#调用class" class="headerlink" title="调用class"></a>调用class</h5><p>生成带class的标签只需要在标签名后面加上.classname即可.例如输入div.test即可生成</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;test&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>也可以直接输入.classname默认生成带该类选择器的div标签</p>
<blockquote>
<p>如果把.换成#即可生成id选择器</p>
</blockquote>
<hr>
<h5 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h5><p>可以初始化标签中的内容,只需要在标签名加上<code>&#123;&#125;</code>,<code>&#123;&#125;</code>中的内容就是标签初始带的内容.例如:输入div{test}即可生成</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>test<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<hr>
<h5 id="自增"><a href="#自增" class="headerlink" title="自增"></a>自增</h5><p><code>$</code>表示自增,可以用在类名和内容上.例如:想要生成分别带有demo1,demo2…的类的标签,只需要在类名后加上<code>$</code>即可.输入div.demo$*5即可生成</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>如果要在内容上递增,只需要在<code>&#123;&#125;</code>输入<code>$</code>即可</p>
<hr>
<p>眠了  </p>
]]></content>
      <tags>
        <tag>Html5</tag>
      </tags>
  </entry>
  <entry>
    <title>html记忆重构(四)</title>
    <url>/2022/05/30/html%E8%AE%B0%E5%BF%86%E9%87%8D%E6%9E%84(%E5%9B%9B)/</url>
    <content><![CDATA[<div style="font-size: 35px; color: #b8a6d9;text-align: center">那一刻我们的吻,像轰鸣的月相</div>

<span id="more"></span>

<hr>
<h3 id="后代选择器"><a href="#后代选择器" class="headerlink" title="后代选择器"></a>后代选择器</h3><p>可以精确地选择到标签中的标签.例如有多个li,我只想修改无序表中的li的样式,只需要在类选择器li的前面加上ul,例如输入</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">        <span class="attribute">color</span>: pink;</span><br><span class="line">        <span class="attribute">font-size</span>: xx-large;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>就可以将无序表中的字体颜色和字体大小修改成想要的样式</p>
<blockquote>
<p>如果只想修改li中的某一类标签,可以继续选择,只需要在后面加上标签名即可</p>
</blockquote>
<hr>
<p>如果有多个ul,而我们只想修改某一个ul中的li,只需要给该ul添加一个类,同时将ul改成.classname即可</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.test</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">        <span class="attribute">text-decoration</span>: none;</span><br><span class="line">        <span class="attribute">color</span>: orange;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="子选择器"><a href="#子选择器" class="headerlink" title="子选择器"></a>子选择器</h3><p>格式如下:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.test</span>&gt;<span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">25px</span></span><br><span class="line">    line-height:<span class="number">25px</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在父类的后面加上<code>&gt;</code>,则选择最近一级的子元素,亲儿子元素</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>亲儿子<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span>孙子<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<hr>
<h3 id="并集选择器"><a href="#并集选择器" class="headerlink" title="并集选择器"></a>并集选择器</h3><p>要给多个类选择器添加同样的属性,只需要用<code>,</code>即可,如下</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span>,</span><br><span class="line"><span class="selector-tag">p</span>,</span><br><span class="line"><span class="selector-class">.test</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="链接伪类选择器"><a href="#链接伪类选择器" class="headerlink" title="链接伪类选择器"></a>链接伪类选择器</h3><p>以链接为例,可以修改其各个状态的属性</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">     <span class="attribute">text-decoration</span>: none;//去掉下划线</span><br><span class="line">&#125;</span><br><span class="line"> <span class="comment">/* 未访问过的链接  a:link*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: black;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 访问过的链接  a:visited*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#576690</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 鼠标经过的链接 a:hover */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 鼠标按下还未弹起的链接 a:active */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: aqua;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里只修改了链接的各种状态下的颜色.</p>
<hr>
<h3 id="focus语法"><a href="#focus语法" class="headerlink" title="focus语法"></a>focus语法</h3><p>为input标签添加focus属性,在聚焦该input标签时的属性]</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:focus</span> &#123;</span><br><span class="line">       <span class="attribute">color</span>: pink;</span><br><span class="line">       <span class="attribute">background-color</span>: <span class="number">#576690</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>未聚焦时,文本框为白色背景,聚焦后,背景颜色变为#576690,字体颜色变为pink</p>
</blockquote>
<hr>
<h3 id="块级元素-x2F-行内元素-x2F-行内块元素"><a href="#块级元素-x2F-行内元素-x2F-行内块元素" class="headerlink" title="块级元素&#x2F;行内元素&#x2F;行内块元素"></a>块级元素&#x2F;行内元素&#x2F;行内块元素</h3><p>块元素典型的是div,可以转换为其他两种形式.</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">display</span>: block;转换为块元素</span><br><span class="line"><span class="attribute">display</span>: inline;转换为行内元素</span><br><span class="line"><span class="attribute">display</span>: inline-block;转换为行内块元素</span><br></pre></td></tr></table></figure>

<hr>
<blockquote>
<p>tips: 将行高设置为块的高度即可实现单行文字垂直居中</p>
</blockquote>
<hr>
<h3 id="背景相关"><a href="#背景相关" class="headerlink" title="背景相关"></a>背景相关</h3><h4 id="背景颜色"><a href="#背景颜色" class="headerlink" title="背景颜色"></a>背景颜色</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">background-color</span>: <span class="number">#576690</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>默认为transparent  </p>
</blockquote>
<h4 id="背景图片"><a href="#背景图片" class="headerlink" title="背景图片"></a>背景图片</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">绝对路径/相对路径/网址</span>)    </span><br></pre></td></tr></table></figure>

<h5 id="背景平铺"><a href="#背景平铺" class="headerlink" title="背景平铺"></a>背景平铺</h5><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">background-repeat</span>: repeat; //默认横纵都平铺  </span><br><span class="line"><span class="attribute">background-repeat</span>: no-repeat; //不平铺   <span class="attribute">background-repeat</span>: repeat-x; //沿横向平铺 <span class="attribute">background-repeat</span>: repeat-y;  //沿纵向平铺  </span><br></pre></td></tr></table></figure>

<blockquote>
<p>背景图片可以盖住背景颜色  </p>
</blockquote>
<h5 id="背景图片的位置"><a href="#背景图片的位置" class="headerlink" title="背景图片的位置"></a>背景图片的位置</h5><blockquote>
<p>比直接插入图片更好控制图片的位置  </p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">background-position</span>: x y;</span><br><span class="line">//可以是方位名词也可以是精确单位   </span><br><span class="line">//方位名词: center top bottom left right  </span><br></pre></td></tr></table></figure>

<blockquote>
<p>方位词不用分先后<br>如果方位词只有一个 另一个默认居中对齐<br>    &#x2F;&#x2F;精确单位: 百分数 或者由数字和单位组成的长度值<br>严格遵守x在前,y在后,如果只指定了一个值,就是x的值,y默认居中对齐  </p>
</blockquote>
<h5 id="背景附着-x2F-背景图像固定"><a href="#背景附着-x2F-背景图像固定" class="headerlink" title="背景附着&#x2F;背景图像固定"></a>背景附着&#x2F;背景图像固定</h5><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">background-attachment</span>:scroll //随内容滚动而滚动  </span><br><span class="line">background-attachment:fixed //背景图像固定  </span><br></pre></td></tr></table></figure>

<h4 id="背景属性的复合写法"><a href="#背景属性的复合写法" class="headerlink" title="背景属性的复合写法"></a>背景属性的复合写法</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">background</span>: 颜色 图片地址 平铺 图像滚动 图片位置 </span><br><span class="line">//没有先后顺序  </span><br></pre></td></tr></table></figure>

<h4 id="rgba"><a href="#rgba" class="headerlink" title="rgba"></a>rgba</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.5</span>)  </span><br><span class="line">//在rgb的基础上加上了<span class="built_in">alpha</span>(透明度)这个参数 <span class="number">0</span>~<span class="number">1</span> <span class="number">0</span>表示完全透明 <span class="number">1</span>表示完全不透明  </span><br></pre></td></tr></table></figure>

<blockquote>
<p>0.5可以写成.5</p>
</blockquote>
]]></content>
      <tags>
        <tag>Html5</tag>
      </tags>
  </entry>
  <entry>
    <title>给L小姐的情书</title>
    <url>/2023/02/18/letter/</url>
    <content><![CDATA[<div style="font-size: 35px; color: #b8a6d9;text-align: center">你是落入我梦中的月亮</br>
你是我手心绽放的玫瑰</div>

<hr>
<span id="more"></span>  
<p>  煜儿，我在梦里闻到了你的发香，我梦到了我们在斯卡布罗的驻足，芜荽、鼠尾草、迷迭香、木棉还有玫瑰，风铃在闹市摆动，梦里的人说着我听不懂的语言，我紧紧地牵着你的手。</p>
<p>煜儿，我在说，<em><strong>我很想你。</strong></em>  </p>
<p>最近在洛尔迦的诗集，书里说</p>
<blockquote>
<p>我要把嘴留在你腿间，<br>把灵魂留给照片、晚香玉<br>还有你徘徊的暗涌，<br>我的爱，我的爱，我想要留下<br>提琴与坟墓，华尔兹的绸带。  </p>
</blockquote>
<p>煜儿，我纷纷的情欲就像提琴收弦时连绵的尾音，每次读到洛尔迦的诗都会想到我们的每一个吻，想到与你共度的每一个夜晚的月相，你是我近乎所有美好记忆的支点，我始终相信爱情是让人发狂的东西，我深深地为你着迷。我爱你，这是我唯一确认的事。  </p>
<p>煜儿，我总写一些晦涩的诗来表达爱意，希望你能咀嚼那些隐喻和朦胧的爱，但我也愿意直接向你表达我难捱的思念和汹涌的爱意。我讨厌别离，但别离也意味着我又一次踏上了和你重逢的路，我很想你。  </p>
<p>煜儿，我相信人是有来生的，我从来都不是一个坚定的唯物主义者，我是你的信徒，我就在你神殿里虔诚的祈祷，等待着你的降临。我是一个彻头彻尾的李佳煜主义者。我喜欢桔梗的花语，是”永恒的爱”。  </p>
<p>煜儿，你就像记忆里周末的清晨，像树林里逃逸的第一缕光线，像夕阳下温暖的归途，你是我所有幻梦的具象，我一切明亮起点。  </p>
<p>煜儿，我快要写不出情话了，只能笨拙的说出我爱你和我很想你。  </p>
<p>煜儿，不管怎么说，我很爱你​。   </p>
<p>也很想你。<br><code>2023.2.18</code> </p>
<p>​    </p>
]]></content>
      <tags>
        <tag>with_yu</tag>
      </tags>
  </entry>
  <entry>
    <title>html记忆重构</title>
    <url>/2022/05/27/html%E8%AE%B0%E5%BF%86%E9%87%8D%E6%9E%84/</url>
    <content><![CDATA[<div style="font-size: 35px; color: #9ac8e2;text-align: center">寂静的雨夜</div>  

<span id="more"></span>  
<div id="head"></div>  

<h3 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h3><p><strong>结构组成:</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>first<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  hugo</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>用vsc时输入!就可以生成头部  </p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span>  </span><br></pre></td></tr></table></figure>

<p>alt+b即可在浏览器打开(配合插件)  </p>
<h4 id="标题标签"><a href="#标题标签" class="headerlink" title="标题标签"></a>标题标签</h4><p><code>&lt;h1&gt;</code> <code>&lt;h2&gt;</code> …<code>&lt;h6&gt;</code>  </p>
<hr>
<h4 id="段落标签"><a href="#段落标签" class="headerlink" title="段落标签"></a>段落标签</h4><p><code>&lt;p&gt;</code>(block) </p>
<h4 id="换行标签"><a href="#换行标签" class="headerlink" title="换行标签"></a>换行标签</h4><p><code>&lt;br /&gt;</code></p>
<hr>
<h4 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h4><p><code>&lt;strong&gt;</code> </p>
<h4 id="倾斜"><a href="#倾斜" class="headerlink" title="倾斜"></a>倾斜</h4><p><code>&lt;em&gt;</code> </p>
<h4 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h4><p><code>&lt;del&gt;</code> </p>
<h4 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h4><p><code>&lt;ins&gt;</code>  </p>
<hr>
<h4 id="分区块元素"><a href="#分区块元素" class="headerlink" title="分区块元素"></a><em><strong>分区块元素</strong></em></h4><p><code>&lt;div&gt;</code> 用得最多的标签</p>
<hr>
<p>图片<code>&lt;img src=&quot;&quot; title=&quot;&quot;&gt;</code> src可以用同一级路径,下一级路径,绝对路径和上一级路径(..&#x2F;)</p>
<hr>
<h4 id="超链接标签"><a href="#超链接标签" class="headerlink" title="超链接标签"></a>超链接标签</h4><p><code>&lt;a href=&quot;链接 #是空链接&quot; targe=&quot;_self or _blank(在新标签页打开)&quot;&gt;</code> 超链接标签中间可以插入img标签 实现点击图片跳转</p>
<hr>
<h4 id="锚点定位"><a href="#锚点定位" class="headerlink" title="锚点定位"></a>锚点定位</h4><p> <code>&lt;a href=&quot;#+id&quot;&gt;</code> 在要定位的标签后定义id&#x3D;”id”即可实现从链接出跳转到该标签.例如:  </p>
<p><a href="#head" title="锚点定位">点此跳转到基础</a></p>
<hr>
<h4 id="注释标签"><a href="#注释标签" class="headerlink" title="注释标签"></a>注释标签</h4><p><code>&lt;!-- --&gt;</code> </p>
<h4 id="大于符号"><a href="#大于符号" class="headerlink" title="大于符号"></a>大于符号</h4><p><code>$gt</code> </p>
<h4 id="小于符号"><a href="#小于符号" class="headerlink" title="小于符号"></a>小于符号</h4><p><code>$lt</code></p>
<h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p><strong>在<code>&lt;table&gt;</code>标签中写表格 可以定义表格的width height border cellspacing(单元格距离)</strong></p>
<div style="color: red">!警告 这些功能可能被删除 不再兼容!</div>
行标签和列标签 行: `<tr>` 列: `<td>` 表头`<th>`(加粗居中)

<p>合并单元格 在<code>&lt;td&gt;</code>里添加rowspan&gt;1 在<code>&lt;tr&gt;</code>添加colspan&gt;1即可</p>
<hr>
<h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><p>表头 <code>&lt;ul&gt;</code> 项<code>&lt;li&gt;</code></p>
<hr>
<h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><p>表头 <code>&lt;ol&gt;</code> 项<code>&lt;li&gt;</code></p>
<hr>
<h3 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h3><p>表单域<code>&lt;form&gt;</code> 在form标签内写表单</p>
<hr>
<h4 id="input标签"><a href="#input标签" class="headerlink" title="input标签"></a>input标签</h4><hr>
<h5 id="text文本框"><a href="#text文本框" class="headerlink" title="text文本框"></a>text文本框</h5><p>格式:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;提交时的name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;初始内容&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;最大输入长度&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<form><input type="text" name="提交时的name" value="输入你的心情" maxlength="10"></form>
---

<h5 id="password密码框"><a href="#password密码框" class="headerlink" title="password密码框"></a>password密码框</h5><p>格式:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;提交时的name 一般为password&quot;</span> &gt;</span></span><br></pre></td></tr></table></figure>

<form><input type="password" name="提交时的name 一般为password" ></form>

<hr>
<h5 id="radio单选框"><a href="#radio单选框" class="headerlink" title="radio单选框"></a>radio单选框</h5><p>格式:例如性别</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span> <span class="attr">id</span>=<span class="string">&quot;男&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;男&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span> <span class="attr">id</span>=<span class="string">&quot;女&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure>

<form>  
<input type="radio" name="sex" value="男" id="男"><label for="男">男</label>   
<input type="radio" name="sex" value="女" id="女"><label for="女">女</label>  
</form>
label标签实现 点击文字也可以进行选择

<h5 id="checkbox复选框"><a href="#checkbox复选框" class="headerlink" title="checkbox复选框"></a>checkbox复选框</h5><p>格式:   </p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;lover&quot;</span> <span class="attr">value</span>=<span class="string">&quot;happiness&quot;</span> <span class="attr">id</span>=<span class="string">&quot;开心&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;开心&quot;</span>&gt;</span>开心<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>你的心情怎么样: </p>
<form><input type="checkbox" name="lover" value="happiness" id="开心">
    <label for="开心">开心</label>
    <input type="checkbox" name="lover" value="happiness" id="快乐">
    <label for="快乐">快乐</label>
    <input type="checkbox" name="lover" value="happiness" id="幸福">
    <label for="幸福">幸福</label>
</form>

<hr>
<h5 id="button按钮"><a href="#button按钮" class="headerlink" title="button按钮"></a>button按钮</h5><p>格式:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">name</span>=<span class="string">&quot;返回的name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;按钮显示的内容&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<form><input type="text" name="confimation" value="请输入验证码" maxlength="6"> <input type="button" name="getconfimation" value="获取验证码"></form>

<hr>
<h5 id="file上传文件"><a href="#file上传文件" class="headerlink" title="file上传文件"></a>file上传文件</h5><p>格式:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;返回的name&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>上传头像:<form><input type="file" name="profilepic"><!--上传头像--></form></p>
<hr>
<h5 id="submit提交表单"><a href="#submit提交表单" class="headerlink" title="submit提交表单"></a>submit提交表单</h5><p>格式:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<form><input type="submit" value="提交"></form>

<hr>
<h5 id="reset重置"><a href="#reset重置" class="headerlink" title="reset重置"></a>reset重置</h5><p>格式:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;重置&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<form>
<input type="text" name="提交时的name" value="输入你的心情" maxlength="10"><br />
<input type="password" name="password" > <br />
<input type="reset" value="重置">
</form>

<hr>
<h5 id="select下拉表单"><a href="#select下拉表单" class="headerlink" title="select下拉表单"></a>select下拉表单</h5><p>格式:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<form>
    <select>
    <option selected="selected">选择你的地区</option>
    <option>四川</option>
    <option>河南</option>
    <option>河北</option>
    <option>江苏</option>
    </select>
    </form>

<hr>
<h5 id="textarea文本域"><a href="#textarea文本域" class="headerlink" title="textarea文本域"></a>textarea文本域</h5><p>格式:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure>

 <form>
 <textarea>
    </textarea>
    </form>  
]]></content>
      <tags>
        <tag>Html5</tag>
      </tags>
  </entry>
  <entry>
    <title>quick_sort/merge_sort/二分</title>
    <url>/2022/06/26/quick-sort/</url>
    <content><![CDATA[<div style="font-size: 35px; color: #b8a6d9;text-align: center">再回头,你不许</br>
如曾经不登对</div>  

<span id="more"></span>  

<hr>
<h4 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h4><blockquote>
<p>先选定一个x,将所有比x小的数放在左半部分,将所有比x大的数放在右半部分<br>再递归处理即可  </p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++&gt;</span></span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">10</span>;<span class="comment">//数据范围1~1000000</span></span><br><span class="line"><span class="type">int</span> n;<span class="comment">//数字个数</span></span><br><span class="line"><span class="type">int</span> q[N];</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">quick_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="comment">//l是左边界,r是右边界</span></span><br><span class="line">    <span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span>;<span class="comment">//如果范围内数组只有一个数或没有数,直接返回</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> x=q[(l+r)/<span class="number">2</span>];<span class="comment">//分界值x取数组中间值</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i=l<span class="number">-1</span>,j=r+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(i&lt;j)&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(q[++i]&lt;x);<span class="comment">//左指针右移 直到当前值大于x</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(q[--j]&gt;x);<span class="comment">//右指针左移 直到当前值小于x</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(i&lt;j) <span class="built_in">swap</span>(q[i],q[j]); <span class="comment">//交换ij处的值</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">quick_sort</span>(q,l,j);<span class="comment">//递归处理左半部分</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">quick_sort</span>(q,j+<span class="number">1</span>,r);<span class="comment">//递归处理右半部分</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;q[i]);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">quick_sort</span>(q,<span class="number">0</span>,n<span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">printf</span>(<span class="string">&quot;%d, q[i]);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    return 0;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果分界值选择起点值q[l],数据过强会报错,故选择中间值q[(l+r)&#x2F;2]</p>
</blockquote>
<hr>
<h4 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h4><blockquote>
<p>将数组递归成只含一个数字的可排序的区间,最后在两个区间的数据从小到大放进tmp数组,再放进数组里</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> q[N],tmp[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">merge_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l,<span class="type">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line">    <span class="type">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;<span class="comment">//取分界点</span></span><br><span class="line">    <span class="built_in">merge_sort</span>(q, l, mid),<span class="built_in">merge_sort</span>(q, mid + <span class="number">1</span>, r);<span class="comment">//递归到最小的区间,从最底层的两个数据排好序,再回到四个数据排好序,始终是两组数据之间的归并,  </span></span><br><span class="line">                                                    <span class="comment">//归并的规模从小到大,2-&gt;4-&gt;8...  </span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i = l,j=mid + <span class="number">1</span>,k = <span class="number">0</span>; <span class="comment">//i是左起点,j是右起点  </span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid &amp;&amp; j &lt;= r)&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(q[i] &lt;= q[j]) tmp[k++] = q[i++]; <span class="comment">//两组数据在各自的内部都已经排好序,从小到大比较两组数据之间的大小就可以将整个数组排序  </span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span> tmp[k++] = q[j++];</span><br><span class="line">    &#125;<span class="comment">//归并的过程,从小到大放入</span></span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid) tmp[k++] = q[i++];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(j &lt;= r) tmp[k++] = q[j++];<span class="comment">//处理剩下的数据</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i = l,k = <span class="number">0</span>; i &lt;= r; i++, k++) q[i] = tmp[k];<span class="comment">//将临时数组中的数据取回  </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;<span class="comment">//n个数字</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;q[i]);<span class="comment">//读入</span></span><br><span class="line">    <span class="built_in">merge_sort</span>(q , <span class="number">0</span> , n<span class="number">-1</span>);<span class="comment">//排序</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n; i++) cout &lt;&lt; q[i] &lt;&lt; <span class="string">&quot; &quot;</span>;<span class="comment">//输出</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="二分"><a href="#二分" class="headerlink" title="二分"></a>二分</h4><blockquote>
<p>在排好序的一组数据中,从中间的数据开始,如果中间的值比目标值小,则目标值在选取值的右边,反之则在左边  直到找到目标值  </p>
</blockquote>
<h5 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h5><p>给定一个按照升序排列的长度为 n 的整数数组，以及 q 个查询。</p>
<p>对于每个查询，返回一个元素 k 的起始位置和终止位置（位置从 0 开始计数）。</p>
<p>如果数组中不存在该元素，则返回 -1 -1。</p>
<hr>
<h5 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h5><p>第一行包含整数 n 和 q，表示数组长度和询问个数。</p>
<p>第二行包含 n 个整数（均在 1∼10000 范围内），表示完整数组。</p>
<p>接下来 q 行，每行包含一个整数 k，表示一个询问元素。</p>
<hr>
<h5 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h5><p>共 q 行，每行包含两个整数，表示所求元素的起始位置和终止位置。</p>
<p>如果数组中不存在该元素，则返回 -1 -1。</p>
<h5 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h5><p>1≤n≤100000<br>1≤q≤10000<br>1≤k≤10000  </p>
<hr>
<h5 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h5><p>6 3<br>1 2 2 3 3 4<br>3<br>4<br>5  </p>
<h5 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h5><p>3 4<br>5 5<br>-1 -1  </p>
<hr>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n, m;<span class="comment">//n个数字,询问个数m</span></span><br><span class="line"><span class="type">int</span> q[N];</span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;q[i]);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line">    <span class="type">int</span> x;<span class="comment">//询问的数字x</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    <span class="type">int</span> l = <span class="number">0</span>,r = n - <span class="number">1</span>; <span class="comment">//左右端点</span></span><br><span class="line"><span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">        <span class="type">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(q[mid] &gt;= x) r = mid;</span><br><span class="line">        <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(q[l]!=x) <span class="built_in">printf</span>(<span class="string">&quot;-1 -1\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,l);</span><br><span class="line">        l = <span class="number">0</span>,r = n - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">            <span class="type">int</span> mid = (l + r) + <span class="number">1</span> &gt;&gt; <span class="number">1</span> ; <span class="comment">// 避免因为l + r 是奇数(即这组数据为偶数个)而引起的边界问题 </span></span><br><span class="line">                                        <span class="comment">//如果数据个数为偶数 每次取得的分界点应该不同 因此+1之后再/2(也可以&gt;&gt;1之后+0.5)</span></span><br><span class="line">            <span class="keyword">if</span>(q[mid] &lt;= x) l = mid;</span><br><span class="line">            <span class="keyword">else</span> r = mid <span class="number">-1</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, l);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;  </span><br></pre></td></tr></table></figure>

<blockquote>
<p>这道题是找目标数字的左右范围,即找到左起点和右终点  </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">   <span class="keyword">while</span>(l&lt;r)&#123;    </span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;  </span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(q[mid] &gt;= x) r = mid;  </span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span> l = mid + <span class="number">1</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这段代码是找到大于等于x的第一个数 即左端点    </p>
</blockquote>
]]></content>
      <tags>
        <tag>algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>start with markdown</title>
    <url>/2022/05/27/start%20with%20md/</url>
    <content><![CDATA[<blockquote>
<p>喂<br>长夜,长夜的重负何时是尽头?<br>何时我能得我所求?<br>抵达终极,<br>享受安逸?<br>小路对我说:”<br>从这里,我开始.”</p>
<blockquote>
<p> ————阿多尼斯</p>
</blockquote>
</blockquote>
<span id="more"></span>

<h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>在文字前加入1-6个#即为标题,#越少标题越大,对应h1-h6.<br>还可以用&#x3D;&#x3D;&#x3D;&#x3D;识别 一级标题,—识别二级标题</p>
<p>tips:#与文字之间要加入空格  </p>
<h2 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h2><p> <em><strong>摘录一段:</strong></em> </p>
<blockquote>
<p>我亲爱的，我想起了过往那些百无聊赖的夜晚，我有时是在读陀思妥耶夫斯基，有时是在听威尔第的歌剧，如果手头不那么紧，或许还伴着蒂普提克的香氛。我总是希望假借伟大作品的精神力量来反抗平庸和穷苦，但最后不免患上恋词癖——反倒是更加显出我想要隐藏的卑劣的内里。但是您却不一样，自有您陪伴的夜晚伊始，我才真正捕捉到了生命的活性与真实，一个肮脏的灵魂才找到了归处。 </p>
</blockquote>
<p> <em><strong>在两段文字之间加入一行空白就可以实现分段.如下:</strong></em>  </p>
<blockquote>
<p>我亲爱的，我想起了过往那些百无聊赖的夜晚，我有时是在读陀思妥耶夫斯基，有时是在听威尔第的歌剧，如果手头不那么紧，或许还伴着蒂普提克的香氛。  </p>
<p>我总是希望假借伟大作品的精神力量来反抗平庸和穷苦，但最后不免患上恋词癖——反倒是更加显出我想要隐藏的卑劣的内里。但是您却不一样，自有您陪伴的夜晚伊始，我才真正捕捉到了生命的活性与真实，一个肮脏的灵魂才找到了归处。  </p>
</blockquote>
<!-- more -->
<h2 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h2><p>在行末加上两个以上的空格按下回车即可生成&lt;hr &#x2F;br&gt;  </p>
<blockquote>
<p><em><strong>我向星辰下令，我停泊瞩望,</strong></em><br><em><strong>我让自己登基，</strong></em><br><em><strong>做风的君王。</strong></em>  </p>
</blockquote>
<p>以上是没有加空格仅按回车的结果<br>好像并没有什么不同&gt;_-,但是为了兼容性,养成良好的习惯  </p>
<h2 id="强调语法"><a href="#强调语法" class="headerlink" title="强调语法"></a>强调语法</h2><p>用**标记 类似h5中的标签,<br><em>一个</em> * &#x3D;italic<br><strong>两个</strong> * &#x3D; strong<br><em><strong>三个</strong></em> * &#x3D;italic+strong  </p>
<p><em>os:支持自己用h5和css的格式自定义</em>,如下:  </p>
<div style="font-size: 25px; color: #576690">大小为25像素,颜色为#576690</div>

<h2 id="引用语法"><a href="#引用语法" class="headerlink" title="引用语法"></a>引用语法</h2><p>用&gt;标记.</p>
<blockquote>
<p>Dorothy followed her through many of the beautiful rooms in her castle.</p>
</blockquote>
<blockquote>
<p>我始终为你而紧张，为你而颤抖；可是你对此毫无感觉，就像你口袋里装了怀表，你对它紧绷的发条没有感觉一样；<br>这根发条在暗中耐心地为你数着你的钟点，计算着你的时间，以它听不见的心跳陪着你东奔西走。<br>而你在它那嘀嗒不停的几百万秒当中，只有一次向它匆匆瞥了一眼。</p>
<p>——《一个陌生女人的来信》 ​​​茨威格  </p>
</blockquote>
<p>引用一段内的文字只需要在最开始的文字前加上&gt; 如果要引用多段,在空白行加上&gt;即可</p>
<h3 id="嵌套引用"><a href="#嵌套引用" class="headerlink" title="嵌套引用"></a>嵌套引用</h3><p>在开头加上&gt;&gt;即可将本行内容嵌套到上一个引用的内容中,如下:  </p>
<blockquote>
<p>我们多么草率地成为了孤儿。玛琳娜，<br>这是我最后一次呼唤你的名字。<br>大雪落在<br>我锈迹斑斑的气管和肺叶上，<br>说吧：今夜，我的嗓音是一列被截停的火车，<br>你的名字是俄罗斯漫长的国境线。</p>
<p>我想象我们的相遇，在一场隆重的死亡背面</p>
<blockquote>
<p>（玫瑰的矛盾贯穿了他硕大的心）；  </p>
<blockquote>
<p>在一九二七年春夜，我们在国境线上相遇<br>因此错过了<br>这个呼啸着奔向终点的世界。<br>而今夜，你是舞曲，世界是错误。  </p>
</blockquote>
</blockquote>
</blockquote>
<p>在引用的内容中可以无限嵌套,跟&gt;的数量有关</p>
<h3 id="带有其他元素的引用"><a href="#带有其他元素的引用" class="headerlink" title="带有其他元素的引用"></a>带有其他元素的引用</h3><p><em><strong>在引用中加入-或者+</strong></em></p>
<blockquote>
<ul>
<li>你的笑， </li>
<li>是大海拥抱海岛的笑，</li>
<li>是星星跳跃浪花的笑，</li>
<li>是椰树遮掩椰果的笑。</li>
<li>你笑着，使黑夜奔逃。</li>
</ul>
</blockquote>
<h2 id="列表语法"><a href="#列表语法" class="headerlink" title="列表语法"></a>列表语法</h2><h3 id="有序表"><a href="#有序表" class="headerlink" title="有序表"></a>有序表</h3><p>用1+”.”+” “开始,之后再使用这种格式,无论数字是多少,都会按照顺序,类似h5中的ol表,如下:  </p>
<ol>
<li>从1开始</li>
<li>这个是5</li>
<li>这个是2</li>
</ol>
<h3 id="无序表"><a href="#无序表" class="headerlink" title="无序表"></a>无序表</h3><p>在每个列表项前面添加破折号 (-)、星号 (*) 或加号 (+) 。缩进一个或多个列表项可创建嵌套列表。</p>
<ul>
<li>First item</li>
<li>Second item</li>
<li>Third item<ul>
<li>Indented item</li>
<li>Indented item</li>
</ul>
</li>
<li>Fourth item</li>
</ul>
<p>要在保留列表连续性的同时在列表中添加另一种元素，请将该元素缩进四个空格或一个制表符，如下例所示：</p>
<ul>
<li><p>This is the first list item.</p>
</li>
<li><p>Here’s the second list item.</p>
<p>I need to add another paragraph below the second list item.</p>
</li>
<li><p>And here’s the third list item.  </p>
<hr></hr></li>
<li><p>This is the first list item.</p>
</li>
<li><p>Here’s the second list item.</p>
<blockquote>
<p>A blockquote would look great below the second list item.</p>
</blockquote>
</li>
<li><p>And here’s the third list item.</p>
<hr></hr>
代码块通常采用四个空格或一个制表符缩进。当它们被放在列表中时，请将它们缩进八个空格或两个制表符。</li>
</ul>
<ol>
<li><p>Open the file.</p>
</li>
<li><p>Find the following code block on line 21:</p>
<pre><code>&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;Test&lt;/title&gt;
  &lt;/head&gt;
</code></pre>
</li>
<li><p>Update the title to match the name of your website.</p>
<hr></hr>
 还可以在有序表中插入无序表</li>
</ol>
<h2 id="代码语法"><a href="#代码语法" class="headerlink" title="代码语法"></a>代码语法</h2><h3 id="将单词或语句用反引号标记即可-如下"><a href="#将单词或语句用反引号标记即可-如下" class="headerlink" title="将单词或语句用反引号标记即可,如下:"></a>将单词或语句用反引号标记即可,如下:</h3><p> <code>hugo</code>  </p>
<h3 id="创建代码块-将代码块的每一行缩进4个字符即可"><a href="#创建代码块-将代码块的每一行缩进4个字符即可" class="headerlink" title="创建代码块,将代码块的每一行缩进4个字符即可"></a>创建代码块,将代码块的每一行缩进4个字符即可</h3><pre><code>#include &lt;bits/stdc++.h&gt;
using namespace std;
    int main()&#123;
        cout&lt;&lt;&quot;hello world&quot;;
    return 0; 
&#125;  
</code></pre>
<hr>
<h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><p>在单独一行上使用三个或多个星号 (***)、破折号 (—) 或下划线 (___) ，并且不能包含其他内容。  </p>
<hr>
<hr>
<hr>
<h2 id="链接语法"><a href="#链接语法" class="headerlink" title="链接语法"></a>链接语法</h2><p>链接组成为-&gt;<a href="https://www.bilibili.com/video/BV1PN411X7QW/" title="红色高跟鞋">中括号内为链接显示名,括号内为地址</a>&lt;-<br>用尖括号可以直接点击<br><a href="mailto:&#108;&#x75;&#120;&#x69;&#x61;&#111;&#103;&#x75;&#111;&#x6e;&#55;&#x30;&#x40;&#x67;&#x6d;&#x61;&#x69;&#x6c;&#46;&#x63;&#111;&#109;">&#108;&#x75;&#120;&#x69;&#x61;&#111;&#103;&#x75;&#111;&#x6e;&#55;&#x30;&#x40;&#x67;&#x6d;&#x61;&#x69;&#x6c;&#46;&#x63;&#111;&#109;</a>   </p>
]]></content>
      <tags>
        <tag>MarkDown</tag>
      </tags>
  </entry>
  <entry>
    <title>给L小姐的诗</title>
    <url>/2022/08/08/poem/</url>
    <content><![CDATA[<div style="font-size: 35px; color: #e7659b;text-align: center">"诗是伤口长出的玫瑰"</div>  

<hr>
<span id="more"></span>

<blockquote>
<h2 id="《黑夜的神明》"><a href="#《黑夜的神明》" class="headerlink" title="《黑夜的神明》"></a>《黑夜的神明》</h2><blockquote>
<p>蓝色的阴影吞噬夕阳<br>天幕不断地下坠<br>你一次次扶起了月亮  </p>
</blockquote>
<blockquote>
<p>风的丝线缠绕手心<br>你的呼吸是柔软的羽毛<br>晦暗的黑夜因此轻盈   </p>
</blockquote>
<blockquote>
<p>你是黑夜的神明<br>赐予我一切的梦境<br>花瓣上月光沉睡<br>指尖的萤火颤动<br>你是我一切关于美的诱因<br>荒瘠灵魂最虔诚的信仰  </p>
</blockquote>
<blockquote>
<p>冬日漫长<br>你是我对春天的祈祷<br> <code>2023.2.9</code>  </p>
</blockquote>
</blockquote>
<hr>
<blockquote>
<h2 id="《MoonFall》"><a href="#《MoonFall》" class="headerlink" title="《MoonFall》"></a>《MoonFall》</h2><blockquote>
<p>姐姐，月光是黑夜里破土的刺<br>我被贯穿的胸膛生出了锈<br>血液凝固在腐朽的心脏<br>冷风肆意地涌入耳膜<br>我听见了宇宙的呼吸 </p>
</blockquote>
<blockquote>
<p>姐姐，世界在为我哀悼<br>蝴蝶停在我的破碎的指尖<br>我寂哑的喉咙无力颤动<br>梦境连接另一个梦境<br>我是迷宫里的回声</p>
</blockquote>
<blockquote>
<p>姐姐,把我的一切撒在海里<br>海的每一次潮汐和浪<br>都将是我的脉搏和心跳<br>在每一个夜晚<br>在焦糊的海面看月的皎洁<br>我将再次感受月的呼吸<br>贪婪地拥抱月光<br>尽管我因此而死<br> <code>2022.11.15</code> </p>
</blockquote>
</blockquote>
<hr>
<blockquote>
<h2 id="《MoonLight》"><a href="#《MoonLight》" class="headerlink" title="《MoonLight》"></a>《MoonLight》</h2><blockquote>
<p>街灯在星空下睡着<br>我们踏着黑暗漫游<br>热风交织着我们的呼吸<br>我用指尖听着你的心跳<br>月光淋湿了手心  </p>
</blockquote>
<blockquote>
<p>当悲伤浪潮涌来<br>你的眼睛是温柔的堤岸<br>在夜色汇成的海里<br>拥抱是爱的港口<br>我们彼此停泊 </p>
</blockquote>
<p><code>2022.8.24</code> </p>
</blockquote>
<hr>
<blockquote>
<h2 id="《眼睛》"><a href="#《眼睛》" class="headerlink" title="《眼睛》"></a>《眼睛》</h2><blockquote>
<p>我们漫步在夜的海滩<br>夕阳淹没夕阳<br>黄昏涌过黄昏<br>云朵是游离的岛屿<br>风在你发梢滚烫翻腾<br>永恒的夜之海里<br>你的眼睛是深邃的黎明  </p>
</blockquote>
<blockquote>
<p>夜色快要让我窒息<br>我正坠入塔尔塔洛斯<br>虚空吞噬虚空<br>沉默笼罩沉默<br>这里禁止拥抱<br>我用眼睛爱你</p>
</blockquote>
<p><code>2022.7.25</code></p>
</blockquote>
<hr>
<blockquote>
<h2 id="“Polianthes-tuberosa”"><a href="#“Polianthes-tuberosa”" class="headerlink" title="“Polianthes tuberosa”"></a>“Polianthes tuberosa”</h2><blockquote>
<p>阴郁的蓝色夜空<br>没有流云和星光<br>我却在路灯下你的影子里<br>看到了月亮    </p>
<p>晚风拂动你的裙摆<br>你的眼睛是黎明的缩影<br>我徒劳地抗拒<br>阿芙洛狄忒的神谕<br>在我已经破碎的心上<br>晚香玉缓缓绽开    </p>
<p>但你只属于黑夜<br>在我荒颓的花园里<br>我要将白昼关进塔尔塔罗斯<br>给你永恒的盛开    </p>
<p>蒙住双眼<br>欺骗自己黑夜会再来  </p>
</blockquote>
<p><code>2022.7.20凌晨</code></p>
</blockquote>
<hr>
<p><em>当回忆的场景与现实重叠，我开始期待我们的重逢，如果可以的话，我更愿意把它看成一座荒芜的岛屿或者是一本空白的笔记，所有的故事都是未知可以有所向往的，而不是一场看过的电影，你熟悉其中的每个镜头，每句台词，你清楚地知道什么时候难过，什么时候欢笑，无力地看着时间缓缓滑向落幕，假装坦率地接受那宿命般的结局。</em></p>
<hr>
<blockquote>
<blockquote>
<p> 雨是失眠的奖励<br> 乌云给世界添的底噪<br> 我听见了所有的声响<br> 连同黑夜对我的耳语<br> 和记忆里的风声<br> 却听不见自己的回音  </p>
<p> 故事喧嚣地驶向结尾<br> 风却兀自沉默<br> 雨水坠落时<br> 乌云因此洁白<br> 我正无声地消散于谁的记忆<br> 宇宙因此变轻<br> 我因此沉重   </p>
</blockquote>
<p><code>2022.1.28 傍晚</code></p>
</blockquote>
<pre><code>/* 我偏爱重逢的故事
   却又害怕重逢   */   
</code></pre>
<hr>
<blockquote>
<h2 id="《20190604》"><a href="#《20190604》" class="headerlink" title="《20190604》"></a>《20190604》</h2><blockquote>
<p>L小姐，我从这里离开<br>我挥别身后所有的一切<br>太阳、云朵和我的钟楼<br>连同被季风困住的时间<br>在这沉默行驶的列车上<br>我遗失了你的笑声  </p>
</blockquote>
<blockquote>
<p>L小姐，童话结尾不属于我<br>我是波德莱尔的信徒<br>绝望之河在我的血液里流淌<br>但我也曾为你叛逃<br>那时你拥有我全部的梦境与祈祷<br>———一个炽热灵魂最忠诚的信仰<br>你赠我月光又打碎<br>在诗稿和长信的灰烬里<br>我埋葬了你的神庙  </p>
</blockquote>
<blockquote>
<p>L小姐，在一场盛大告别的背面<br>我们命运般地重逢<br>月光在莱茵河上流淌<br>晚香玉缓缓地盛开<br>跟随着赫米娅的足迹<br>你又浮现在我仲夏的梦里  </p>
</blockquote>
<blockquote>
<p>L小姐，把你比作月亮显得俗套<br>我把你比作死亡<br>当你看向我<br>我的呼吸和心跳都停止<br>我会在墓碑上深深刻下<br>这串意义不明的数字<br>而这首诗<br>就是我的墓志铭 </p>
</blockquote>
<p><code>2021.12.30</code>  </p>
</blockquote>
<hr>
<blockquote>
<h2 id="“LAST-L”"><a href="#“LAST-L”" class="headerlink" title="“LAST L”"></a>“LAST L”</h2><blockquote>
<p>&#x2F;回忆是黑白的绘卷<br>我却用彩色涂抹<br>海蓝色的月光是错误<br>那时我为逃离而忏悔<br>如同背弃誓言的骑士<br>应当在绞刑架上赎罪 </p>
</blockquote>
<blockquote>
<p>现在我庆幸<br>像撕毁了契约的浮士德<br>在恍惚间就跳过了深渊的缝隙<br>长夜那半闭的眼睛&#x2F;  </p>
</blockquote>
<p><code>2021.12.26晚</code>  </p>
</blockquote>
<hr>
<blockquote>
<h2 id="《水手》"><a href="#《水手》" class="headerlink" title="《水手》"></a>《水手》</h2><blockquote>
<p>黑暗森林的咒语<br>另一颗坠落的太阳<br>剩下灯塔孤独地探戈<br>今夜，航船的水声是舞曲<br>夜幕也月光中旋转  </p>
</blockquote>
<blockquote>
<p>珊瑚埋葬了我们的废墟<br>破碎的海风割裂了我的声带<br>沙哑与嘶吼把我融化<br>今夜，我唱完了海的所有章节<br>我又将沉默不语  </p>
</blockquote>
<blockquote>
<p>我在呼吸之间沉默<br>世界也为我寂哑<br>当华尔兹奏起的时候<br>我已经失去听觉<br>今夜，你不再是塞壬<br>我会在迷失中回头  </p>
</blockquote>
<p><code>2021.12.23凌晨</code>  </p>
</blockquote>
<hr>
<blockquote>
<h2 id="无题"><a href="#无题" class="headerlink" title="无题"></a>无题</h2><blockquote>
<p>月光在白天梦游<br>潮汐在黄昏退去<br>所有的沙砾也沉默<br>海在冻结中呼吸<br>灯塔是海的眼睛<br>溯着月光<br>凝望那旗帜与足迹<br>就不会再有海浪翻涌<br>泪水是最后的潮汐</p>
</blockquote>
<p><code>2021.12.21晚</code>  </p>
</blockquote>
<hr>
<blockquote>
<h2 id="《心事》"><a href="#《心事》" class="headerlink" title="《心事》"></a>《心事》</h2><blockquote>
<p>最近的一颗星<br>就在我们脚下<br>河床是陈旧的泪痕<br>蓝色的夜降临<br>悄然的冻结和<br>沉默的流动<br>你一开口说冬天<br>我的倒影就结冰<br>月上的灯火也熄灭  </p>
</blockquote>
<p><code>2021.12.4晚</code>   </p>
</blockquote>
<hr>
<blockquote>
<h2 id="无题-1"><a href="#无题-1" class="headerlink" title="无题"></a>无题</h2><blockquote>
<p>风吹皱云的纹路<br>夕阳流淌在穹顶<br>黑夜遮住月的眼睛<br>我不敢再抬头<br>怕那是最后一缕<br>她眼里婉转的星光  </p>
</blockquote>
<p> <code>2021.12.3晚</code>  </p>
</blockquote>
<hr>
<blockquote>
<h2 id="《恩底弥翁》"><a href="#《恩底弥翁》" class="headerlink" title="《恩底弥翁》"></a>《恩底弥翁》</h2><blockquote>
<p>太阳从不眷顾我<br>我是黑夜的羔羊<br>泛黄的月光里<br>我是古老的神祇——<br>塞勒涅最虔诚的信徒<br>我愿因她的吻沉睡<br>尽管她不再为我停留</p>
</blockquote>
<blockquote>
<p>当蓝色的夜坠落<br>我的秘密被云吞食<br>当海水涌起<br>夜风吹动我颤栗的心<br>月光化作一千个梦<br>而你<br>依然在那一千个隐喻里  </p>
</blockquote>
<p><code>2021.11.20凌晨</code>          </p>
</blockquote>
<hr>
<blockquote>
<h2 id="《终曲》"><a href="#《终曲》" class="headerlink" title="《终曲》"></a>《终曲》</h2><blockquote>
<p>她念出咒语<br>黑白的回忆<br>浸上明亮的水彩<br>我们欢笑 我们牵手<br>我们在天台吹风<br>我们在楼道拥吻<br>当我睁开眼<br>所有的刹那都失色  </p>
</blockquote>
<p><code>2021.10.8晚</code>  </p>
</blockquote>
<hr>
<blockquote>
<h2 id="《反方向的钟》"><a href="#《反方向的钟》" class="headerlink" title="《反方向的钟》"></a>《反方向的钟》</h2><blockquote>
<p>当我祈祷时间回头<br>玻璃上钟的倒影浮现<br>你关掉了失灵的钟<br>沙的世界顷刻崩塌<br>碎掉的不只是玻璃<br>还有我全部的灵魂</p>
</blockquote>
<p><code>2021.6.29晚</code>  </p>
</blockquote>
<hr>
<div style="font-size: 50px; color: #576690;text-align: center">"THE END"</div>  







]]></content>
      <tags>
        <tag>with_yu</tag>
      </tags>
  </entry>
  <entry>
    <title>运算符重载</title>
    <url>/2023/03/28/%E8%BF%90%E7%AE%97%E7%AC%A6%E9%87%8D%E8%BD%BD/</url>
    <content><![CDATA[<div style="font-size: 35px; color: #9ac8e2;text-align: center">寂静的雨夜</div>  

<span id="more"></span>

<hr>
<blockquote>
<p>由于sort函数使用<code>&lt;</code>运算符,但是无法直接将结构体进行排序,因此需要重载<code>&lt;</code>.</p>
</blockquote>
<h3 id="外部定义函数"><a href="#外部定义函数" class="headerlink" title="外部定义函数"></a>外部定义函数</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> M = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Edge</span>&#123;</span><br><span class="line">    <span class="type">int</span> a,b,w;</span><br><span class="line">&#125; e[M]</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(Edge a,Edge b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.w&lt;b.w; <span class="comment">//升序 以w的大小排列</span></span><br><span class="line">    <span class="comment">//return a.w&gt;b.w; 降序</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> m = <span class="number">100000</span>;</span><br><span class="line">    <span class="built_in">sort</span>(e,e+m,cmp);<span class="comment">//第三个参数自定义比较函数</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="结构体内部重载运算符"><a href="#结构体内部重载运算符" class="headerlink" title="结构体内部重载运算符"></a>结构体内部重载运算符</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> M = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Edge</span>&#123;</span><br><span class="line">    <span class="type">int</span> a,b,w;</span><br><span class="line"> 	<span class="type">const</span> <span class="keyword">operator</span>&lt;(<span class="type">const</span> Edge &amp;c)&#123;</span><br><span class="line"> 	<span class="keyword">return</span> w&lt;c.w;<span class="comment">//升序排列</span></span><br><span class="line"> 	<span class="comment">//return w&gt;c.w;降序</span></span><br><span class="line"> 	&#125;</span><br><span class="line">&#125; e[M]  </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> m = <span class="number">100000</span>;</span><br><span class="line">    <span class="built_in">sort</span>(e,e+m);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="结构体外部重载运算符"><a href="#结构体外部重载运算符" class="headerlink" title="结构体外部重载运算符"></a>结构体外部重载运算符</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> M = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Edge</span>&#123;</span><br><span class="line">    <span class="type">int</span> a,b,w;</span><br><span class="line">&#125; e[M]  </span><br><span class="line"><span class="type">const</span> <span class="keyword">operator</span>&lt;(<span class="type">const</span> Edge &amp;a,<span class="type">const</span> Edge &amp;b)&#123;</span><br><span class="line"> 	<span class="keyword">return</span> a.w&lt;b.w;<span class="comment">//升序排列</span></span><br><span class="line"> 	<span class="comment">//return w&gt;c.w;降序</span></span><br><span class="line"> 	&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> m = <span class="number">100000</span>;</span><br><span class="line">    <span class="built_in">sort</span>(e,e+m);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>algorithm</tag>
      </tags>
  </entry>
</search>
